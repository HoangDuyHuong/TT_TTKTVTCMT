C51 COMPILER V9.60.7.0   MAIN                                                              10/21/2024 16:18:54 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TA
                    -BS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>  
   2          
   3          unsigned char irKey = 0;
   4          unsigned long bitPattern = 0;
   5          unsigned long newKey = 0;
   6          unsigned long pre_newKey = 0;
   7          unsigned char timerValue;
   8          unsigned char msCount = 0;
   9          char pulseCount = 0;
  10          void Timer0_Init(void);
  11          unsigned char Decode_IRKey(unsigned char key);
  12          void ToggleLED(unsigned char ledNum);  
  13          unsigned char tat1,tat2,tat3;
  14          void main(){
  15   1          P2 = 0xFF;         
  16   1          Timer0_Init();     
  17   1          EA = 1;            
  18   1          while (1)
  19   1          {
  20   2            irKey=Decode_IRKey(newKey);
  21   2            if(irKey==1)
  22   2              P2_0=0;
  23   2            if(irKey==2)
  24   2              P2_1=0;
  25   2            if(irKey==3)
  26   2              P2_2=0;
  27   2            if(irKey==4)
  28   2              P2_0=1;
  29   2            if(irKey==5)
  30   2              P2_1=1;
  31   2            if(irKey==6)
  32   2              P2_2=1;
  33   2            if(P3_2==0)
  34   2              P2_4=0;
  35   2            if(P3_1==0)
  36   2              P2_4=1;
  37   2          }    
  38   1      }
  39          
  40          unsigned char Decode_IRKey(unsigned char key){
  41   1          unsigned char returnValue = 0;
  42   1          switch (key)
  43   1          {
  44   2          case 0xFF30CF:  // Phím '1'
  45   2              returnValue = 1;
  46   2              break;
  47   2          case 0xFF18E7:  // Phím '2'
  48   2              returnValue = 2;
  49   2              break;
  50   2          case 0xFF7A85:  // Phím '3'
  51   2              returnValue = 3;
  52   2              break;
  53   2            case 0xFF10EF:  // Phím '4' 
  54   2              returnValue = 4;
C51 COMPILER V9.60.7.0   MAIN                                                              10/21/2024 16:18:54 PAGE 2   

  55   2              break;
  56   2          case 0xFF38C7:  // Phím '5' 
  57   2              returnValue = 5;
  58   2              break;
  59   2          case 0xFF5AA5:  // Phím '6' 
  60   2              returnValue = 6;
  61   2              break;
  62   2          case 0xFF42BD:  // Phím '7' 
  63   2              returnValue = 7;
  64   2              break;
  65   2          case 0xFF4AB5:  // Phím '8' 
  66   2              returnValue = 8;
  67   2              break;
  68   2          case 0xFF52AD:  // Phím '9' 
  69   2              returnValue = 9;
  70   2              break;
  71   2          default:
  72   2              returnValue = 0;  // Mã không h?p l?
  73   2              break;
  74   2          }
  75   1          
  76   1          return returnValue;
  77   1      }
  78          
  79          // Ng?t Timer0 d? d?m mili giây
  80          void timer0_isr() interrupt 1
  81          {
  82   1          if (msCount < 50)
  83   1              msCount++;
  84   1          
  85   1          // C?u hình l?i giá tr? Timer0 d? ti?p t?c d?m 1ms
  86   1          TH0 = 0xFC; 
  87   1          TL0 = 0x18;  // Giá tr? du?c tính cho t?n s? 12MHz
  88   1      }
  89          
  90          // Ng?t ngoài d? nh?n tín hi?u IR
  91          void externalIntr0_ISR() interrupt 0
  92          {
  93   1          timerValue = msCount;
  94   1          msCount = 0;
  95   1          
  96   1          TH0 = 0xFC; 
  97   1          TL0 = 0x18;  // C?u hình l?i Timer0
  98   1      
  99   1          pulseCount++;
 100   1          
 101   1          if ((timerValue >= 50))  // N?u d? r?ng xung l?n hon 50ms, dánh d?u b?t d?u khung (Start Of Frame)
 102   1          {
 103   2              pulseCount = -2;     // B? qua 2 xung d?u
 104   2              bitPattern = 0;
 105   2          }
 106   1          else if ((pulseCount >= 0) && (pulseCount < 32)) // Tích luy giá tr? bit t? 0 d?n 31
 107   1          {
 108   2              if (timerValue >= 2) // Xung có d? r?ng > 2ms là bit 1
 109   2                  bitPattern |= (unsigned long)1 << (31 - pulseCount);
 110   2          }
 111   1          else if (pulseCount >= 32) // K?t thúc khung khi nh?n d? 32 bit
 112   1          {
 113   2              newKey = bitPattern;  // Luu mã phím m?i
 114   2              pulseCount = 0;
 115   2          }
 116   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              10/21/2024 16:18:54 PAGE 3   

 117          
 118          // Kh?i t?o Timer0
 119          void Timer0_Init(){
 120   1          TMOD |= 0x01;     // C?u hình Timer0 ? ch? d? 16-bit (MODE 1)
 121   1          TH0 = 0xFC; 
 122   1          TL0 = 0x18;       // Giá tr? kh?i t?o cho 1ms t?i t?n s? 12 MHz
 123   1          TR0 = 1;          // B?t d?u Timer0
 124   1          ET0 = 1;          // Cho phép ng?t Timer0
 125   1          IT0 = 1;          // C?u hình ng?t ngoài INT0 kích ho?t ? c?nh xu?ng
 126   1          EX0 = 1;          // Cho phép ng?t ngoài INT0
 127   1      }
 128          
 129          // Hàm d?i tr?ng thái LED tuong ?ng
 130          void ToggleLED(unsigned char ledNum){
 131   1          // ledNum = 1, 2, 3 tuong ?ng v?i LED t?i P2.0, P2.1, P2.2
 132   1          switch (ledNum) {
 133   2              case 1: 
 134   2                  P2 ^= 0x01;  // Ð?i tr?ng thái LED1 (P2.0)
 135   2                  break;
 136   2              case 2: 
 137   2                  P2 ^= 0x02;  // Ð?i tr?ng thái LED2 (P2.1)
 138   2                  break;
 139   2              case 3: 
 140   2                  P2 ^= 0x04;  // Ð?i tr?ng thái LED3 (P2.
 141   2          }
 142   1        }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    383    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
