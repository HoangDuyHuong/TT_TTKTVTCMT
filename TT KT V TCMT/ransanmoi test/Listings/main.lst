C51 COMPILER V9.60.7.0   MAIN                                                              11/05/2024 07:08:41 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "matrix.h"
   2          #include <INTRINS.h>
   3          #include <REG51.h>
   4          #define COMMONPORTS   P0
   5          
   6          // Define button pins
   7          sbit UP = P3^2;  // Button for UP
   8          sbit DOWN = P3^3;  // Button for DOWN
   9          sbit LEFT = P3^1;  // Button for LEFT
  10          sbit RIGHT = P3^0; // Button for RIGHT
  11          
  12          unsigned char snake[64];
  13          unsigned char food;
  14          unsigned char direction = 0; // 0: Up, 1: Down, 2: Left, 3: Right
  15          unsigned char snake_length = 1;
  16          unsigned char display_buffer[8];
  17          
  18          void init_game() {
  19   1          unsigned char i;
  20   1          for (i = 0; i < 64; i++) {
  21   2              snake[i] = 0;
  22   2          }
  23   1          snake[0] = 0; // Start position
  24   1          food = 10;     // Initial food position
  25   1      }
  26          
  27          void update_snake() {
  28   1          unsigned char i;
  29   1          for (i = snake_length; i > 0; i--) {
  30   2              snake[i] = snake[i-1];
  31   2          }
  32   1          if (direction == 0) snake[0] = (snake[0] - 8 + 64) % 64; // Up
  33   1          else if (direction == 1) snake[0] = (snake[0] + 8) % 64; // Down
  34   1          else if (direction == 2) snake[0] = (snake[0] - 1 + 64) % 64; // Left
  35   1          else if (direction == 3) snake[0] = (snake[0] + 1) % 64; // Right
  36   1      }
  37          
  38          void check_collision() {
  39   1          unsigned char i;
  40   1          for (i = 1; i < snake_length; i++) {
  41   2              if (snake[0] == snake[i]) {
  42   3                  snake_length = 1; 
  43   3                  snake[0] = 0; // Reset to initial position food = (food + 17) % 64; // Reposition food
  44   3                  init_game();
  45   3              }
  46   2          }
  47   1          if (snake[0] == food) {
  48   2              snake_length++;
  49   2              food = (food + 17) % 64;
  50   2          }
  51   1      }
  52          
  53          void update_display_buffer() {
  54   1          unsigned char i, row, col;
C51 COMPILER V9.60.7.0   MAIN                                                              11/05/2024 07:08:41 PAGE 2   

  55   1          for (i = 0; i < 8; i++) {
  56   2              display_buffer[i] = 0x00;
  57   2          }
  58   1          for (i = 0; i < snake_length; i++) {
  59   2              row = snake[i] / 8;
  60   2              col = snake[i] % 8;
  61   2              display_buffer[row] |= (1 << col);
  62   2          }
  63   1          row = food / 8;
  64   1          col = food % 8;
  65   1          display_buffer[row] |= (1 << col);
  66   1      }
  67          
  68          void main() {
  69   1          unsigned char tab, j;
  70   1          unsigned int i;
  71   1      
  72   1          init_game();
  73   1          while(1) {
  74   2              if (UP == 0) direction = 0;
  75   2              if (DOWN == 0) direction = 1;
  76   2              if (LEFT == 0) direction = 2;
  77   2              if (RIGHT == 0) direction = 3;
  78   2              
  79   2              update_snake();
  80   2              check_collision();
  81   2              update_display_buffer();
  82   2      
  83   2              for(i = 0; i < 50; i++) { // Refresh the display
  84   3                  for(tab = 0; tab < 8; tab++) {
  85   4                      Hc595SendByte(0x00);
  86   4                      COMMONPORTS = TAB[tab];
  87   4                      Hc595SendByte(display_buffer[tab]);
  88   4                      delay(2);
  89   4                  }
  90   3              }
  91   2      
  92   2              delay(1); // Adjust speed
  93   2          }
  94   1      }
*** WARNING C280 IN LINE 69 OF main.c: 'j': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    456    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     75       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
